<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <parent>
    <groupId>org.squashtest.tm</groupId>
    <artifactId>squash-tm</artifactId>
    <version>1.17.2.RC1-SNAPSHOT</version>
  </parent>

  <groupId>org.squashtest.tm</groupId>
  <artifactId>squash-tm-provision</artifactId>
  <packaging>pom</packaging>
  <name>squash-tm-provision</name>
  <description>Provisions a database for running Squash TM at dev stage</description>

  <properties>
    <assembly.skip>false</assembly.skip>

    <db.create.password>sa</db.create.password>
    <db.create.user>sa</db.create.user>

    <!-- database generation. Default H2 database properties -->
    <db.dialect>org.hibernate.dialect.H2Dialect</db.dialect>
    <db.driver>org.h2.Driver</db.driver>

    <!-- DB content can be "false" (includes standard dev data) or "true" (no dev data)-->
    <db.emptycontent>false</db.emptycontent>
    <db.password>sa</db.password>
    <db.resources.dir>${project.build.directory}/database-archive-resources</db.resources.dir>
    <db.url>jdbc:h2:${squashtest.rootDir}/data/squash-tm</db.url>
    <db.username>sa</db.username>

    <hibernate.search.index>./indexes</hibernate.search.index>

    <log.dir>./logs</log.dir>
    <log.level.global>INFO</log.level.global>
    <log.level.squash>DEBUG</log.level.squash>

    <lucene.dir>${project.build.directory}/luceneindexes</lucene.dir>

    <master.changelog>${db.resources.dir}/sample/sample-db.changelog.xml</master.changelog>
    <master.emptychangelog>${db.resources.dir}/global.changelog-master.xml</master.emptychangelog>

    <squashtest.rootDir>${project.basedir}/../tm</squashtest.rootDir>
  </properties>

  <dependencyManagement>
    <dependencies>
      <dependency>
        <groupId>org.squashtest.tm</groupId>
        <artifactId>squash-tm-bom</artifactId>
        <version>${project.version}</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>
    </dependencies>
  </dependencyManagement>

  <dependencies>
    <!-- ====== DATABASE ====== -->
    <dependency>
      <groupId>com.h2database</groupId>
      <artifactId>h2</artifactId>
    </dependency>

    <dependency>
      <groupId>mysql</groupId>
      <artifactId>mysql-connector-java</artifactId>
    </dependency>

    <dependency>
      <groupId>org.postgresql</groupId>
      <artifactId>postgresql</artifactId>
    </dependency>

  </dependencies>

  <build>
    <resources>
      <resource>
        <filtering>true</filtering>
        <directory>src/main/liquibase</directory>
      </resource>
    </resources>

    <plugins>
      <!-- fetch the database generation module -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-remote-resources-plugin</artifactId>
        <executions>
          <execution>
            <id>generate-database-resources</id>
            <goals>
              <goal>process</goal>
            </goals>
            <phase>generate-resources</phase>
            <configuration>
              <resourceBundles>
                <resourceBundle>org.squashtest.tm:squashtest-tm-database:${project.version}</resourceBundle>
              </resourceBundles>
              <outputDirectory>${db.resources.dir}</outputDirectory>
            </configuration>
          </execution>

        </executions>
      </plugin>

      <!-- create the database with dev data-->
      <plugin>
        <groupId>org.liquibase</groupId>
        <artifactId>liquibase-maven-plugin</artifactId>
        <executions>
          <execution>
            <id>create-database</id>
            <goals>
              <goal>update</goal>
            </goals>
            <phase>process-resources</phase>
            <configuration>
              <skip>${db.emptycontent}</skip>
              <dropFirst>true</dropFirst>
              <changeLogFile>${master.changelog}</changeLogFile>
              <driver>${db.driver}</driver>
              <url>${db.url}</url>
              <username>${db.create.user}</username>
              <password>${db.create.password}</password>
            </configuration>
          </execution>
        </executions>
      </plugin>

      <!-- generate the dbdoc -->
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>xml-maven-plugin</artifactId>
        <configuration>
          <transformationSets>
            <transformationSet>
              <dir>${project.basedir}/src/main/liquibase/makedoc/</dir>
              <excludes>
                <exclude>*.xsl</exclude>
              </excludes>
              <stylesheet>${project.basedir}/src/main/liquibase/makedoc/dbdoc_style.xsl</stylesheet>
            </transformationSet>
          </transformationSets>
        </configuration>
        <dependencies>
          <dependency>
            <groupId>net.sf.saxon</groupId>
            <artifactId>saxon</artifactId>
            <version>8.7</version>
          </dependency>
        </dependencies>
        <executions>
          <execution>
            <goals>
              <goal>transform</goal>
            </goals>
            <phase>process-resources</phase>
          </execution>
        </executions>
      </plugin>

    </plugins>
  </build>

  <profiles>

    <profile>
      <id>emptycontent</id>
      <activation>
        <property>
          <name>db.emptycontent</name>
          <value>true</value>
        </property>
      </activation>

      <build>
        <plugins>
          <plugin>
            <groupId>org.liquibase</groupId>
            <artifactId>liquibase-maven-plugin</artifactId>
            <executions>
              <execution>
                <id>no-dev-data</id>
                <goals>
                  <goal>update</goal>
                </goals>
                <!-- this phase should be after schema generation -->
                <phase>generate-test-resources</phase>
                <configuration>
                  <skip>false</skip>
                  <dropFirst>true</dropFirst>
                  <changeLogFile>${master.emptychangelog}</changeLogFile>
                  <driver>${db.driver}</driver>
                  <url>${db.url}</url>
                  <username>${db.create.user}</username>
                  <password>${db.create.password}</password>
                </configuration>
              </execution>
            </executions>
          </plugin>
        </plugins>

      </build>

    </profile>

    <profile>
      <id>mysql</id>

      <properties>
        <db.create.password>${dev.database.password}</db.create.password>
        <!-- for database generation only -->
        <db.create.user>${dev.database.username}</db.create.user>
        <db.dialect>org.hibernate.dialect.MySQLDialect</db.dialect>
        <db.driver>com.mysql.jdbc.Driver</db.driver>
        <db.password>${dev.database.password}</db.password>
        <db.url>${dev.database.url}</db.url>
        <db.username>${dev.database.username}</db.username>
      </properties>

      <dependencies>
        <dependency>
          <groupId>mysql</groupId>
          <artifactId>mysql-connector-java</artifactId>
        </dependency>
      </dependencies>
      <build>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-enforcer-plugin</artifactId>
            <executions>
              <execution>
                <goals>
                  <goal>enforce</goal>
                </goals>
                <configuration>
                  <rules>
                    <requireProperty>
                      <property>dev.database.url</property>
                    </requireProperty>
                    <requireProperty>
                      <property>dev.database.username</property>
                    </requireProperty>
                    <requireProperty>
                      <property>dev.database.password</property>
                    </requireProperty>
                  </rules>
                </configuration>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>

    <profile>
      <id>postgresql</id>

      <activation>
        <activeByDefault>false</activeByDefault>
        <property>
          <!-- kind of legacy. use regular -Ppostgresql instead -->
          <name>environment.type</name>
          <value>postgresqlDev</value>
        </property>
      </activation>

      <properties>
        <db.create.password>${dev.database.password}</db.create.password>
        <!-- for database generation only -->
        <db.create.user>${dev.database.username}</db.create.user>
        <db.dialect>org.hibernate.dialect.PostgreSQL9Dialect</db.dialect>
        <db.driver>org.postgresql.Driver</db.driver>
        <db.password>${dev.database.password}</db.password>
        <db.url>${dev.database.url}</db.url>
        <db.username>${dev.database.username}</db.username>
      </properties>

      <build>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-enforcer-plugin</artifactId>
            <executions>
              <execution>
                <goals>
                  <goal>enforce</goal>
                </goals>
                <configuration>
                  <rules>
                    <requireProperty>
                      <property>dev.database.url</property>
                    </requireProperty>
                    <requireProperty>
                      <property>dev.database.username</property>
                    </requireProperty>
                    <requireProperty>
                      <property>dev.database.password</property>
                    </requireProperty>
                  </rules>
                </configuration>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
  </profiles>
</project>
