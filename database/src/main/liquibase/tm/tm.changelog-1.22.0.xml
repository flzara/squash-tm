<?xml version="1.0" encoding="UTF-8"?>
<!--

        This file is part of the Squashtest platform.
        Copyright (C) Henix, henix.fr

        See the NOTICE file distributed with this work for additional
        information regarding copyright ownership.

        This is free software: you can redistribute it and/or modify
        it under the terms of the GNU Lesser General Public License as published by
        the Free Software Foundation, either version 3 of the License, or
        (at your option) any later version.

        this software is distributed in the hope that it will be useful,
        but WITHOUT ANY WARRANTY; without even the implied warranty of
        MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
        GNU Lesser General Public License for more details.

        You should have received a copy of the GNU Lesser General Public License
        along with this software.  If not, see <http://www.gnu.org/licenses/>.

-->
<databaseChangeLog xmlns="http://www.liquibase.org/xml/ns/dbchangelog"
                   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
                   xsi:schemaLocation="http://www.liquibase.org/xml/ns/dbchangelog http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-2.0.xsd">

  <changeSet id="tm-1.22.0" author="jthebault">
    <comment>Update TM database version number</comment>
    <update tableName="CORE_CONFIG">
      <column name="VALUE" value="1.22.0"/>
      <where>STR_KEY = 'squashtest.tm.database.version'</where>
    </update>
  </changeSet>

  <!-- Story SQUASH-167 : adding iteration UUID for external reference -->
  <changeSet id="tm-1.22.0-squash-167-test-it-uuid-for-tf-side-trigger" author="edegenetais">
    <addColumn tableName="ITERATION">
      <column name="UUID" type="java.sql.Types.VARCHAR(36)" />
    </addColumn>
    <addUniqueConstraint tableName="ITERATION" columnNames="UUID" constraintName="uc_iteration_uuid" />
  </changeSet>

  <changeSet id="tm-1.22.0-squash-167-update-iteration-uuid-postgresql" author="edegenetais" dbms="postgresql">
    <comment>Created missing UUIDs on upgrade to add the not-null constraint.</comment>
    <sql>
      CREATE EXTENSION IF NOT EXISTS "uuid-ossp";
      UPDATE ITERATION SET UUID = uuid_generate_v4() WHERE UUID is NULL;
      ALTER TABLE ITERATION ALTER COLUMN UUID SET NOT NULL;
    </sql>
  </changeSet>

  <changeSet id="tm-1.22.0-squash-167-update-iteration-uuid-mysql" author="edegenetais" dbms="mysql">
    <comment>Created missing UUIDs on upgrade to add the not-null constraint.</comment>
    <sql>
      UPDATE ITERATION SET UUID = uuid() WHERE UUID is NULL;
      ALTER TABLE ITERATION MODIFY UUID VARCHAR(36) NOT NULL;
    </sql>
  </changeSet>

  <changeSet id="tm-1.22.0-squash-167-update-iteration-uuid-h2" author="edegenetais" dbms="h2">
    <comment>Created missing UUIDs on upgrade to add the not-null constraint.</comment>
    <sql>
      UPDATE ITERATION SET UUID = random_uuid() WHERE UUID is NULL;
      ALTER TABLE ITERATION MODIFY UUID VARCHAR(36) NOT NULL;
    </sql>
  </changeSet>

  <changeSet id="tm-1.22.0-SQUASH-174-action-word-table" author="jlor">
    <comment>Add action word table</comment>

    <createTable tableName="ACTION_WORD">

      <column name="ACTION_WORD_ID" type="BIGINT" autoIncrement="true">
        <constraints primaryKey="true" nullable="false"/>
      </column>

      <column name="WORD" type="VARCHAR(255)">
        <constraints nullable="false" unique="true"/>

      </column>

    </createTable>
  </changeSet>

  <changeSet id="tm-1.22.0-SQUASH-174-keyword-test-step-table" author="jlor" >
    <comment>Add keyword test step table</comment>

    <createTable tableName="KEYWORD_TEST_STEP">
      <column name="TEST_STEP_ID" type="BIGINT" remarks="Shared key with TEST_STEP table">
        <constraints primaryKey="true" nullable="false" references="TEST_STEP(TEST_STEP_ID)" primaryKeyName="pk_keyword_test_step"
                     foreignKeyName="fk_keyword_test_step_test_step"/>
      </column>

      <column name="ACTION_WORD_ID" type="BIGINT" remarks="The action word which this test step uses">
        <constraints nullable="false" foreignKeyName="fk_keyword_test_step_action_word_id" references="ACTION_WORD (ACTION_WORD_ID)"/>
      </column>

      <!-- SQUASH-175 - Add KEYWORD column in KEYWORD_TEST_STEP table -->
      <column name="KEYWORD" type="java.sql.Types.VARCHAR(20)" remarks="A keyword test step keyword">
        <constraints nullable="false" />
      </column>
    </createTable>

    <createIndex tableName="KEYWORD_TEST_STEP" indexName="idx_fk_keyword_test_step_action_word">
      <column name="ACTION_WORD_ID" />
    </createIndex>

  </changeSet>

  <changeSet id="tm-1.22.0-SQUASH-174-update-query-filter" author="jlor">
    <comment>Changes in QueryBuilder related tables concerning TEST_CASE_CALLSTEPCOUNT prototype column: adding a new subclass of TestStep (KeywordTestStep) broke the QueryBuilder</comment>
    <sql>update QUERY_FILTER_VALUES set FILTER_VALUE='org.squashtest.tm.domain.testcase.CallTestStep' where QUERY_FILTER_ID=1;</sql>
    <sql>update QUERY_FILTER_COLUMN set QUERY_COLUMN_ID=134, FILTER_OPERATION='IS_CLASS' where QUERY_FILTER_ID=1;</sql>
  </changeSet>

  <changeSet id="tm-1.22.0-drop-temp_execution_extender_order_table-postgresql" author="jlor" dbms="postgresql">
    <comment>Drop TEMP_EXECUTION_EXTENDER_ORDER table for PostgreSQL</comment>
    <dropTable tableName="TEMP_EXECUTION_EXTENDER_ORDER" />
  </changeSet>

  <changeSet id="tm-1.22.0-drop-temp_execution_extender_order_table-h2" author="jlor" dbms="h2">
    <comment>Drop TEMP_EXECUTION_EXTENDER_ORDER table for h2</comment>
    <dropTable tableName="TEMP_EXECUTION_EXTENDER_ORDER" />
  </changeSet>

  <changeSet id="tm-1.22.0-TEST_CASE_HIERARCHY_MODIFICATION" author="jlor">
    <comment>Create KEYWORD_TEST_CASE table. Update SCRIPTED_TC_EXTENDER table/column</comment>

    <createTable tableName="KEYWORD_TEST_CASE">
      <column name="TCLN_ID" type="BIGINT">
        <constraints primaryKey="true" foreignKeyName="fk_keyword_tc_tc" references="TEST_CASE(TCLN_ID)"/>
      </column>
    </createTable>

    <dropColumn tableName="SCRIPTED_TC_EXTENDER" columnName="SCRIPTED_TC_EXTENDER_ID" />
    <renameTable oldTableName="SCRIPTED_TC_EXTENDER" newTableName="SCRIPTED_TEST_CASE" />
    <renameColumn tableName="SCRIPTED_TEST_CASE" oldColumnName="TEST_CASE_ID" newColumnName="TCLN_ID" columnDataType="BIGINT" />
    <addPrimaryKey tableName="SCRIPTED_TEST_CASE" columnNames="TCLN_ID" />

  </changeSet>

  <changeSet id="tm-1.22.0-SQUASH-325-update-tc-kind-column-prototype" author="jlor">
    <comment>In QueryColumnPrototype table, at TestCaseKind line, change data_type column value from Level_enum to Entity</comment>
    <sql>update QUERY_COLUMN_PROTOTYPE set DATA_TYPE='ENTITY', COLUMN_TYPE='ENTITY' where QUERY_COLUMN_ID=184;</sql>
  </changeSet>

  <changeSet id="tm-1.22.0-SQUASH-325-drop-tc-kind-column" author="jlor">
    <dropColumn tableName="TEST_CASE" columnName="TC_KIND" />
  </changeSet>

  <changeSet id="tm-1.22.0-SQUASH-325-drop-language-column-in-scripted-tc" author="jlor">
    <comment>LANGUAGE is no longer necessary for ScriptedTestCase, as it is always GHERKIN.</comment>
    <dropColumn tableName="SCRIPTED_TEST_CASE" columnName="LANGUAGE" />
  </changeSet>

  <!-- Story SQUASH-421 : adding test suite UUID for external reference -->
  <changeSet id="tm-1.22.0-squash-421-add-test-suite-uuid" author="aguilhem">
    <addColumn tableName="TEST_SUITE">
      <column name="UUID" type="java.sql.Types.VARCHAR(36)" />
    </addColumn>
    <addUniqueConstraint tableName="TEST_SUITE" columnNames="UUID" constraintName="uc_test_suite_uuid" />
  </changeSet>

  <changeSet id="tm-1.22.0-squash-421-update-test-suite-uuid-postgresql" author="aguilhem" dbms="postgresql">
    <comment>Created missing UUIDs on upgrade to add the not-null constraint.</comment>
    <sql>
      CREATE EXTENSION IF NOT EXISTS "uuid-ossp";
      UPDATE TEST_SUITE SET UUID = uuid_generate_v4() WHERE UUID is NULL;
      ALTER TABLE TEST_SUITE ALTER COLUMN UUID SET NOT NULL;
    </sql>
  </changeSet>

  <changeSet id="tm-1.22.0-squash-421-update-test-suite-uuid-mysql" author="aguilhem" dbms="mysql">
    <comment>Created missing UUIDs on upgrade to add the not-null constraint.</comment>
    <sql>
      UPDATE TEST_SUITE SET UUID = uuid() WHERE UUID is NULL;
      ALTER TABLE TEST_SUITE MODIFY UUID VARCHAR(36) NOT NULL;
    </sql>
  </changeSet>

  <changeSet id="tm-1.22.0-squash-421-update-test-suite-uuid-h2" author="aguilhem" dbms="h2">
    <comment>Created missing UUIDs on upgrade to add the not-null constraint.</comment>
    <sql>
      UPDATE TEST_SUITE SET UUID = random_uuid() WHERE UUID is NULL;
      ALTER TABLE TEST_SUITE MODIFY UUID VARCHAR(36) NOT NULL;
    </sql>
  </changeSet>

  <changeSet id="tm-1.22.0-SQUASH-325-EXECUTION_HIERARCHY_MODIFICATION" author="jlor">
    <comment>Create KEYWORD_EXECUTION table. Update SCRIPTED_EXECUTION_EXTENDER table/column.</comment>

    <renameTable oldTableName="SCRIPTED_EXECUTION_EXTENDER" newTableName="SCRIPTED_EXECUTION" />
    <dropColumn tableName="SCRIPTED_EXECUTION" columnName="SCRIPTED_EXECUTION_EXTENDER_ID" />
    <addPrimaryKey tableName="SCRIPTED_EXECUTION" columnNames="EXECUTION_ID" />
    <dropColumn tableName="SCRIPTED_EXECUTION" columnName="LANGUAGE" />

    <createTable tableName="KEYWORD_EXECUTION">
      <column name="EXECUTION_ID" type="BIGINT">
        <constraints primaryKey="true" foreignKeyName="fk_keyword_exec_exec" references="EXECUTION(EXECUTION_ID)" />
      </column>
    </createTable>
  </changeSet>

  <changeSet id="tm-1.22.0-SQUASH-302-action-word-workspace" author="jlor">
    <comment>Create action word library table</comment>

    <createTable tableName="ACTION_WORD_LIBRARY">
      <column name="AWL_ID" type="BIGINT" autoIncrement="true" remarks="The auto-generated id">
        <constraints primaryKey="true" nullable="false" primaryKeyName="PK_ACTION_WORD_LIBRARY" />
      </column>

      <column name="ATTACHMENT_LIST_ID" type="BIGINT" remarks="Foreign key to ATTACHMENT_LIST">
        <constraints references="ATTACHMENT_LIST(ATTACHMENT_LIST_ID)" foreignKeyName="fk_awLib_attachment_list" />
      </column>
    </createTable>

    <createIndex tableName="ACTION_WORD_LIBRARY" indexName="idx_action_word_library">
      <column name="AWL_ID" />
    </createIndex>

    <createIndex tableName="ACTION_WORD_LIBRARY" indexName="idx_fk_awl_attachment_list">
      <column name="ATTACHMENT_LIST_ID" />
    </createIndex>

    <comment>Insert corresponding entries in ACL tables</comment>
    <!--
    Magic number listing :
    * next generated ACL_CLASS.ID : 8 (ActionWordLibrary)
    * CLASS_ID of test case library : 3

    The following script will insert the new ACL_CLASS (the action word library).

    Then it will batch insert in ACL_GROUP_PERMISSION, for each user profile,
    the same permission for action word libraries than it enjoys for the test case libraries.
    -->
    <sql>
      insert into ACL_CLASS(ID, CLASSNAME)
      values(8, 'org.squashtest.tm.domain.actionword.ActionWordLibrary');

      insert into ACL_GROUP_PERMISSION(ACL_GROUP_ID, PERMISSION_MASK, CLASS_ID)
      select AGP2.ACL_GROUP_ID, AGP2.PERMISSION_MASK, 8
      from ACL_GROUP_PERMISSION AGP2
      where CLASS_ID = 3;
    </sql>

    <comment>Add foreign key to the project in an action word</comment>

    <addColumn tableName="ACTION_WORD">
      <column name="PROJECT_ID" type="BIGINT">
        <constraints references="PROJECT(PROJECT_ID)" foreignKeyName="fk_action_word_project" />
      </column>
    </addColumn>

    <comment>Add foreign key to the library in a project</comment>

    <addColumn tableName="PROJECT">
      <column name="AWL_ID" type="BIGINT">
        <constraints references="ACTION_WORD_LIBRARY(AWL_ID)" foreignKeyName="fk_project_awl" />
      </column>
    </addColumn>

    <comment>Create one action word library for each existing project</comment>

    <!--
    This script will create
    - one ActionWordLibrary per project,
    - one attachment list per library
    - bind them together
    - the corresponding entry in ACL_OBJECT_IDENTITY
    - and finally the corresponding entries in ACL_RESPONSIBILITY_SCOPE_ENTRY

    In the following queries the IDs for the attachment lists and AWL libraries are imposed (rather than
    autogenerated) in order to simplify the operations. In particular the AWL ids are set to be the same
    than the projects they depend on.
    -->

    <sql>
      <![CDATA[
      -- Create the libraries --

      insert into ACTION_WORD_LIBRARY (AWL_ID)
        select p.PROJECT_ID
        from PROJECT p;

      -- Attachments, Step 1 --
      -- Create a ranking table, akin to what would ROW_NUMBER() order by id desc would say --

      create table AWL_RANK as
        select awl.awl_id,
               count(awl2.awl_id) as ranking
        from ACTION_WORD_LIBRARY awl,
             ACTION_WORD_LIBRARY awl2
        where awl.awl_id <= awl2.awl_id
        group by awl.awl_id
        order by ranking asc;


      -- Attachments, Step 2 --
      -- Create a table that pairs library ids with predictable, consecutive attachment_list_ids using the rank
      -- calculated earlier --

      create table AWL_ATTACHMENT_LIST_PAIRING as
        select awl_rank.awl_id,
               (select max(al.attachment_list_id) from ATTACHMENT_LIST al) + awl_rank.ranking as attachment_list_id
        from AWL_RANK awl_rank;


      -- Attachments, Step 3 --
      -- Insert the attachment lists and update fk in the action word library --

      insert into ATTACHMENT_LIST(ATTACHMENT_LIST_ID)
        select pair.attachment_list_id
        from AWL_ATTACHMENT_LIST_PAIRING pair;

      update ACTION_WORD_LIBRARY awl
      set ATTACHMENT_LIST_ID = (select pair.attachment_list_id
                                from AWL_ATTACHMENT_LIST_PAIRING pair
                                where pair.awl_id = awl.awl_id);

      -- Attachments, Step 4 and final --
      -- Drop the temporary tables --

      drop table AWL_ATTACHMENT_LIST_PAIRING;

      drop table AWL_RANK;

      -- Bind the project to the AWL library --

      update PROJECT P
      set AWL_ID = PROJECT_ID;

      -- Insert the acl object identities --

      insert into ACL_OBJECT_IDENTITY(IDENTITY, CLASS_ID)
        select awl.awl_id, 8 from ACTION_WORD_LIBRARY awl;

      -- Add the user/team permissions in ACL_RESPONSIBILITY_SCOPE_ENTRY
      -- Each user will receive the same acl_group on each action word library than on the project it depends on
      -- (this last sentence is the idea behind the auto join on acl_object_identity in this query) --

      insert into ACL_RESPONSIBILITY_SCOPE_ENTRY(party_id, acl_group_id, object_identity_id)
        select distinct arse.party_id, arse.acl_group_id, awl_oid.id
        from ACL_RESPONSIBILITY_SCOPE_ENTRY arse
        inner join ACL_OBJECT_IDENTITY oid on (arse.object_identity_id = oid.id and oid.class_id = 1)
        inner join ACL_OBJECT_IDENTITY awl_oid on (oid.identity = awl_oid.identity and awl_oid.class_id = 8);

    ]]>
    </sql>

  </changeSet>

  <changeSet id="tm-1.22.0-SQUASH-302-action-word-workspace-2" author="jlor" dbms="postgresql">
    <comment>Reset postgresql sequences</comment>

    <sql>
      select setval('action_word_library_awl_id_seq', (select MAX(ARL_ID) from AUTOMATION_REQUEST_LIBRARY));
      select setval('attachment_list_attachment_list_id_seq', (select MAX(ATTACHMENT_LIST_ID) from ATTACHMENT_LIST));
      select setval('acl_object_identity_id_seq', (SELECT MAX(ID) from ACL_OBJECT_IDENTITY));
      select setval('acl_responsibility_scope_entry_id_seq', (select MAX(ID) from ACL_RESPONSIBILITY_SCOPE_ENTRY));
    </sql>

  </changeSet>

</databaseChangeLog>
