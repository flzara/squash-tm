<?xml version="1.0" encoding="UTF-8"?>
<!--

        This file is part of the Squashtest platform.
        Copyright (C) Henix, henix.fr

        See the NOTICE file distributed with this work for additional
        information regarding copyright ownership.

        This is free software: you can redistribute it and/or modify
        it under the terms of the GNU Lesser General Public License as published by
        the Free Software Foundation, either version 3 of the License, or
        (at your option) any later version.

        this software is distributed in the hope that it will be useful,
        but WITHOUT ANY WARRANTY; without even the implied warranty of
        MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
        GNU Lesser General Public License for more details.

        You should have received a copy of the GNU Lesser General Public License
        along with this software.  If not, see <http://www.gnu.org/licenses/>.

-->
<databaseChangeLog xmlns="http://www.liquibase.org/xml/ns/dbchangelog"
                   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
                   xsi:schemaLocation="http://www.liquibase.org/xml/ns/dbchangelog http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-2.0.xsd">


  <changeSet id="tm-1.18.0" author="jthebault">
    <comment>Update TM database version number</comment>
    <update tableName="CORE_CONFIG">
      <column name="VALUE" value="1.18.0"/>
      <where>STR_KEY = 'squashtest.tm.database.version'</where>
    </update>
  </changeSet>

  <changeSet id="tm-1.18.0-connection-log-table" author="aguilhem">
    <comment>Create Connection Attempt Log Table</comment>
    <createTable tableName="CONNECTION_ATTEMPT_LOG">
      <column name="ATTEMPT_ID" type="BIGINT" autoIncrement="true" remarks="autogenerated ID">
        <constraints primaryKey="true" nullable="false"/>
      </column>
      <column name="LOGIN" type="java.sql.Types.VARCHAR(50)" remarks="login used to connect"/>
      <column name="CONNECTION_DATE" type="DATETIME" remarks="Date of connection">
        <constraints nullable="false"/>
      </column>
      <column name="SUCCESS" type="BOOLEAN" remarks="if connection succeeded or not">
        <constraints nullable="false"/>
      </column>
    </createTable>
  </changeSet>

  <changeSet id="tm-1.18.0-project-template-link" author="jlor">
    <comment>Adding a column to keep the link between a Project and a Project Template</comment>
    <addColumn tableName="PROJECT">
      <column name="TEMPLATE_ID" type="bigint">
        <constraints nullable="true"
                     foreignKeyName="fk_project_template_id"
                     references="PROJECT(PROJECT_ID)"/>
      </column>
    </addColumn>
  </changeSet>

  <!-- Add unique constraints for ordered lists. Before adding it, a script cleans up the related tables -->

  <changeSet id="tm-1.18.0-feature-7183.1-mysql" author="jprioux" dbms="mysql">
    <comment>mysql - add unique constraint for ordered list : test case steps</comment>
    <sql>
      <![CDATA[
        drop table if exists TEST_CASE_STEPS_TMP;

        create table TEST_CASE_STEPS_TMP
                    (select TEST_CASE_ID, STEP_ID, min(STEP_ORDER) STEP_ORDER
                       from TEST_CASE_STEPS
                   group by TEST_CASE_ID, STEP_ID);

        create index idx1 on TEST_CASE_STEPS_TMP(TEST_CASE_ID,STEP_ID);

        update TEST_CASE_STEPS_TMP t1,
              (select TEST_CASE_ID, STEP_ID, (select count(*)
                                     from TEST_CASE_STEPS_TMP b
                                    where a.TEST_CASE_ID = b.TEST_CASE_ID
                                      and a.STEP_ORDER >= b.STEP_ORDER) ligne
                 from TEST_CASE_STEPS_TMP a) t2
        set t1.STEP_ORDER = t2.ligne - 1
         where t1.TEST_CASE_ID = t2.TEST_CASE_ID and t1.STEP_ID = t2.STEP_ID;

        truncate table TEST_CASE_STEPS;

        insert into TEST_CASE_STEPS
        select a.TEST_CASE_ID, a.STEP_ID,
               a.STEP_ORDER + 1 - (select count(*) from TEST_CASE_STEPS_TMP b
                                where a.TEST_CASE_ID = b.TEST_CASE_ID
                                  and a.STEP_ORDER = b.STEP_ORDER
                                  and a.STEP_ID <= b.STEP_ID
                             group by b.TEST_CASE_ID, b.STEP_ORDER) STEP_ORDER
          from TEST_CASE_STEPS_TMP a;

        drop table TEST_CASE_STEPS_TMP;
      ]]>
    </sql>
    <addUniqueConstraint tableName="TEST_CASE_STEPS" columnNames="TEST_CASE_ID, STEP_ORDER"
                         constraintName="uc_test_case_steps_order"/>
  </changeSet>

  <changeSet id="tm-1.18.0-feature-7183.2-mysql" author="jprioux" dbms="mysql">
    <comment>mysql - add unique constraint for ordered list : tcs in iteration</comment>
    <sql>
      <![CDATA[
        drop table if exists ITEM_TEST_PLAN_LIST_TMP;

        create table ITEM_TEST_PLAN_LIST_TMP
                    (select ITERATION_ID, ITEM_TEST_PLAN_ID, min(ITEM_TEST_PLAN_ORDER) ITEM_TEST_PLAN_ORDER
                       from ITEM_TEST_PLAN_LIST
                   group by ITERATION_ID, ITEM_TEST_PLAN_ID);

        create index idx2 on ITEM_TEST_PLAN_LIST_TMP(ITERATION_ID, ITEM_TEST_PLAN_ID);

        update ITEM_TEST_PLAN_LIST_TMP t1,
              (select ITERATION_ID, ITEM_TEST_PLAN_ID, (select count(*)
                                     from ITEM_TEST_PLAN_LIST_TMP b
                                    where a.ITERATION_ID = b.ITERATION_ID
                                      and a.ITEM_TEST_PLAN_ORDER >= b.ITEM_TEST_PLAN_ORDER) ligne
                 from ITEM_TEST_PLAN_LIST_TMP a) t2
        set t1.ITEM_TEST_PLAN_ORDER = t2.ligne - 1
         where t1.ITERATION_ID = t2.ITERATION_ID and t1.ITEM_TEST_PLAN_ID = t2.ITEM_TEST_PLAN_ID;

        truncate table ITEM_TEST_PLAN_LIST;

        insert into ITEM_TEST_PLAN_LIST
        select a.ITERATION_ID, a.ITEM_TEST_PLAN_ID,
               a.ITEM_TEST_PLAN_ORDER + 1 - (select count(*) from ITEM_TEST_PLAN_LIST_TMP b
                                where a.ITERATION_ID = b.ITERATION_ID
                                  and a.ITEM_TEST_PLAN_ORDER = b.ITEM_TEST_PLAN_ORDER
                                  and a.ITEM_TEST_PLAN_ID <= b.ITEM_TEST_PLAN_ID
                             group by b.ITERATION_ID, b.ITEM_TEST_PLAN_ORDER) ITEM_TEST_PLAN_ORDER
          from ITEM_TEST_PLAN_LIST_TMP a;

        drop table ITEM_TEST_PLAN_LIST_TMP;
      ]]>
    </sql>
    <addUniqueConstraint tableName="ITEM_TEST_PLAN_LIST" columnNames="ITERATION_ID, ITEM_TEST_PLAN_ORDER"
                         constraintName="uc_item_test_plan_list_order"/>
  </changeSet>

  <changeSet id="tm-1.18.0-feature-7183.3-mysql" author="jprioux" dbms="mysql">
    <comment>mysql - add unique constraint for ordered list : tcs in test suite</comment>
    <sql>
      <![CDATA[
        drop table if exists TEST_SUITE_TEST_PLAN_ITEM_TMP;

        create table TEST_SUITE_TEST_PLAN_ITEM_TMP
                    (select SUITE_ID, TPI_ID, min(TEST_PLAN_ORDER) TEST_PLAN_ORDER
                       from TEST_SUITE_TEST_PLAN_ITEM
                   group by SUITE_ID, TPI_ID);

        create index idx2 on TEST_SUITE_TEST_PLAN_ITEM_TMP(SUITE_ID, TPI_ID);

        update TEST_SUITE_TEST_PLAN_ITEM_TMP t1,
              (select SUITE_ID, TPI_ID, (select count(*)
                                     from TEST_SUITE_TEST_PLAN_ITEM_TMP b
                                    where a.SUITE_ID = b.SUITE_ID
                                      and a.TEST_PLAN_ORDER >= b.TEST_PLAN_ORDER) ligne
                 from TEST_SUITE_TEST_PLAN_ITEM_TMP a) t2
        set t1.TEST_PLAN_ORDER = t2.ligne - 1
         where t1.SUITE_ID = t2.SUITE_ID and t1.TPI_ID = t2.TPI_ID;

        truncate table TEST_SUITE_TEST_PLAN_ITEM;

        insert into TEST_SUITE_TEST_PLAN_ITEM
        select a.TPI_ID, a.SUITE_ID,
               a.TEST_PLAN_ORDER + 1 - (select count(*) from TEST_SUITE_TEST_PLAN_ITEM_TMP b
                                where a.SUITE_ID = b.SUITE_ID
                                  and a.TEST_PLAN_ORDER = b.TEST_PLAN_ORDER
                                  and a.TPI_ID <= b.TPI_ID
                             group by b.SUITE_ID, b.TEST_PLAN_ORDER) TEST_PLAN_ORDER
          from TEST_SUITE_TEST_PLAN_ITEM_TMP a;

        drop table TEST_SUITE_TEST_PLAN_ITEM_TMP;
      ]]>
    </sql>
    <addUniqueConstraint tableName="TEST_SUITE_TEST_PLAN_ITEM" columnNames="SUITE_ID, TEST_PLAN_ORDER"
                         constraintName="uc_test_suite_test_plan_item_order"/>
  </changeSet>

  <changeSet id="tm-1.18.0-feature-7183.4-mysql" author="jprioux" dbms="mysql">
    <comment>mysql - add unique constraint for ordered list : tcs in campaign</comment>
    <sql>
      <![CDATA[
        drop table if exists CAMPAIGN_TEST_PLAN_ITEM_TMP;

        create table CAMPAIGN_TEST_PLAN_ITEM_TMP
                    (select CTPI_ID, CAMPAIGN_ID, TEST_CASE_ID, USER_ID, min(TEST_PLAN_ORDER) TEST_PLAN_ORDER, DATASET_ID
                       from CAMPAIGN_TEST_PLAN_ITEM
                   group by CAMPAIGN_ID, CTPI_ID);

        create index idx2 on CAMPAIGN_TEST_PLAN_ITEM_TMP(CAMPAIGN_ID, CTPI_ID);

        update CAMPAIGN_TEST_PLAN_ITEM_TMP t1,
              (select CTPI_ID, CAMPAIGN_ID, TEST_CASE_ID, USER_ID, (select count(*)
                                     from CAMPAIGN_TEST_PLAN_ITEM_TMP b
                                    where a.CAMPAIGN_ID = b.CAMPAIGN_ID
                                      and a.TEST_PLAN_ORDER >= b.TEST_PLAN_ORDER) ligne, DATASET_ID
                 from CAMPAIGN_TEST_PLAN_ITEM_TMP a) t2
        set t1.TEST_PLAN_ORDER = t2.ligne - 1
         where t1.CAMPAIGN_ID = t2.CAMPAIGN_ID and t1.CTPI_ID = t2.CTPI_ID;

        truncate table CAMPAIGN_TEST_PLAN_ITEM;

        insert into CAMPAIGN_TEST_PLAN_ITEM
        select a.CTPI_ID, a.CAMPAIGN_ID, a.TEST_CASE_ID, a.USER_ID,
               a.TEST_PLAN_ORDER + 1 - (select count(*) from CAMPAIGN_TEST_PLAN_ITEM_TMP b
                                where a.CAMPAIGN_ID = b.CAMPAIGN_ID
                                  and a.TEST_PLAN_ORDER = b.TEST_PLAN_ORDER
                                  and a.CTPI_ID <= b.CTPI_ID
                             group by b.CAMPAIGN_ID, b.TEST_PLAN_ORDER) TEST_PLAN_ORDER, a.DATASET_ID
          from CAMPAIGN_TEST_PLAN_ITEM_TMP a;

        drop table CAMPAIGN_TEST_PLAN_ITEM_TMP;
      ]]>
    </sql>
    <addUniqueConstraint tableName="CAMPAIGN_TEST_PLAN_ITEM" columnNames="CAMPAIGN_ID, TEST_PLAN_ORDER"
                         constraintName="uc_campaign_test_plan_item_order"/>
  </changeSet>

  <changeSet id="tm-1.18.0-feature-7183.1-postgresql" author="jprioux" dbms="postgresql">
    <comment>postgresql - add unique constraint for ordered list : test case steps</comment>
    <sql>
      <![CDATA[
        drop table if exists TEST_CASE_STEPS_TMP;

        create table TEST_CASE_STEPS_TMP AS
                    (select TEST_CASE_ID, STEP_ID, min(STEP_ORDER) STEP_ORDER
                       from TEST_CASE_STEPS
                   group by TEST_CASE_ID, STEP_ID);

        create index idx1 on TEST_CASE_STEPS_TMP(TEST_CASE_ID,STEP_ID);

        update TEST_CASE_STEPS_TMP t1
           set STEP_ORDER = t2.ligne - 1
          from (select TEST_CASE_ID, STEP_ID, (select count(*)
                                                 from TEST_CASE_STEPS_TMP b
                                                where a.TEST_CASE_ID = b.TEST_CASE_ID
                                                  and a.STEP_ORDER >= b.STEP_ORDER) ligne
                  from TEST_CASE_STEPS_TMP a) t2
         where t1.TEST_CASE_ID = t2.TEST_CASE_ID and t1.STEP_ID = t2.STEP_ID;

        truncate table TEST_CASE_STEPS;

        insert into TEST_CASE_STEPS
        select a.TEST_CASE_ID, a.STEP_ID,
               a.STEP_ORDER + 1 - (select count(*) from TEST_CASE_STEPS_TMP b
                                where a.TEST_CASE_ID = b.TEST_CASE_ID
                                  and a.STEP_ORDER = b.STEP_ORDER
                                  and a.STEP_ID <= b.STEP_ID
                             group by b.TEST_CASE_ID, b.STEP_ORDER) STEP_ORDER
          from TEST_CASE_STEPS_TMP a;

        drop table TEST_CASE_STEPS_TMP;
      ]]>
    </sql>
    <addUniqueConstraint tableName="TEST_CASE_STEPS" columnNames="TEST_CASE_ID, STEP_ORDER"
                         constraintName="uc_test_case_steps_order"/>
  </changeSet>

  <changeSet id="tm-1.18.0-feature-7183.2-postgresql" author="jprioux" dbms="postgresql">
    <comment>postgresql - add unique constraint for ordered list : tcs in iteration</comment>
    <sql>
      <![CDATA[
        drop table if exists ITEM_TEST_PLAN_LIST_TMP;

        create table ITEM_TEST_PLAN_LIST_TMP AS
                    (select ITERATION_ID, ITEM_TEST_PLAN_ID, min(ITEM_TEST_PLAN_ORDER) ITEM_TEST_PLAN_ORDER
                       from ITEM_TEST_PLAN_LIST
                   group by ITERATION_ID, ITEM_TEST_PLAN_ID);

        create index idx2 on ITEM_TEST_PLAN_LIST_TMP(ITERATION_ID, ITEM_TEST_PLAN_ID);

        update ITEM_TEST_PLAN_LIST_TMP t1
        set ITEM_TEST_PLAN_ORDER = t2.ligne - 1
        from (select ITERATION_ID, ITEM_TEST_PLAN_ID, (select count(*)
                                     from ITEM_TEST_PLAN_LIST_TMP b
                                    where a.ITERATION_ID = b.ITERATION_ID
                                      and a.ITEM_TEST_PLAN_ORDER >= b.ITEM_TEST_PLAN_ORDER) ligne
                 from ITEM_TEST_PLAN_LIST_TMP a) t2
         where t1.ITERATION_ID = t2.ITERATION_ID and t1.ITEM_TEST_PLAN_ID = t2.ITEM_TEST_PLAN_ID;

        truncate table ITEM_TEST_PLAN_LIST;

        insert into ITEM_TEST_PLAN_LIST
        select a.ITERATION_ID, a.ITEM_TEST_PLAN_ID,
               a.ITEM_TEST_PLAN_ORDER + 1 - (select count(*) from ITEM_TEST_PLAN_LIST_TMP b
                                where a.ITERATION_ID = b.ITERATION_ID
                                  and a.ITEM_TEST_PLAN_ORDER = b.ITEM_TEST_PLAN_ORDER
                                  and a.ITEM_TEST_PLAN_ID <= b.ITEM_TEST_PLAN_ID
                             group by b.ITERATION_ID, b.ITEM_TEST_PLAN_ORDER) ITEM_TEST_PLAN_ORDER
          from ITEM_TEST_PLAN_LIST_TMP a;

        drop table ITEM_TEST_PLAN_LIST_TMP;
      ]]>
    </sql>
    <addUniqueConstraint tableName="ITEM_TEST_PLAN_LIST" columnNames="ITERATION_ID, ITEM_TEST_PLAN_ORDER"
                         constraintName="uc_item_test_plan_list_order"/>
  </changeSet>

  <changeSet id="tm-1.18.0-feature-7183.3-postgresql" author="jprioux" dbms="postgresql">
    <comment>postgresql - add unique constraint for ordered list : tcs in test suite</comment>
    <sql>
      <![CDATA[
        drop table if exists TEST_SUITE_TEST_PLAN_ITEM_TMP;

        create table TEST_SUITE_TEST_PLAN_ITEM_TMP AS
                    (select SUITE_ID, TPI_ID, min(TEST_PLAN_ORDER) TEST_PLAN_ORDER
                       from TEST_SUITE_TEST_PLAN_ITEM
                   group by SUITE_ID, TPI_ID);

        create index idx2 on TEST_SUITE_TEST_PLAN_ITEM_TMP(SUITE_ID, TPI_ID);

        update TEST_SUITE_TEST_PLAN_ITEM_TMP t1
        set TEST_PLAN_ORDER = t2.ligne - 1
        from (select SUITE_ID, TPI_ID, (select count(*)
                                     from TEST_SUITE_TEST_PLAN_ITEM_TMP b
                                    where a.SUITE_ID = b.SUITE_ID
                                      and a.TEST_PLAN_ORDER >= b.TEST_PLAN_ORDER) ligne
                 from TEST_SUITE_TEST_PLAN_ITEM_TMP a) t2
         where t1.SUITE_ID = t2.SUITE_ID and t1.TPI_ID = t2.TPI_ID;

        truncate table TEST_SUITE_TEST_PLAN_ITEM;

        insert into TEST_SUITE_TEST_PLAN_ITEM
        select a.TPI_ID, a.SUITE_ID,
               a.TEST_PLAN_ORDER + 1 - (select count(*) from TEST_SUITE_TEST_PLAN_ITEM_TMP b
                                where a.SUITE_ID = b.SUITE_ID
                                  and a.TEST_PLAN_ORDER = b.TEST_PLAN_ORDER
                                  and a.TPI_ID <= b.TPI_ID
                             group by b.SUITE_ID, b.TEST_PLAN_ORDER) TEST_PLAN_ORDER
          from TEST_SUITE_TEST_PLAN_ITEM_TMP a;

        drop table TEST_SUITE_TEST_PLAN_ITEM_TMP;
      ]]>
    </sql>
    <addUniqueConstraint tableName="TEST_SUITE_TEST_PLAN_ITEM" columnNames="SUITE_ID, TEST_PLAN_ORDER"
                         constraintName="uc_test_suite_test_plan_item_order"/>
  </changeSet>

  <changeSet id="tm-1.18.0-feature-7183.4-postgresql" author="jprioux" dbms="postgresql">
    <comment>postgresql - add unique constraint for ordered list : tcs in campaign</comment>
    <sql>
      <![CDATA[
        drop table if exists CAMPAIGN_TEST_PLAN_ITEM_TMP;

        create table CAMPAIGN_TEST_PLAN_ITEM_TMP AS
                    (select CTPI_ID, CAMPAIGN_ID, TEST_CASE_ID, USER_ID, min(TEST_PLAN_ORDER) TEST_PLAN_ORDER, DATASET_ID
                       from CAMPAIGN_TEST_PLAN_ITEM
                   group by CAMPAIGN_ID, CTPI_ID);

        create index idx2 on CAMPAIGN_TEST_PLAN_ITEM_TMP(CAMPAIGN_ID, CTPI_ID);

        update CAMPAIGN_TEST_PLAN_ITEM_TMP t1
           set TEST_PLAN_ORDER = t2.ligne - 1
          from (select CTPI_ID, CAMPAIGN_ID, TEST_CASE_ID, USER_ID, (select count(*)
                                     from CAMPAIGN_TEST_PLAN_ITEM_TMP b
                                    where a.CAMPAIGN_ID = b.CAMPAIGN_ID
                                      and a.TEST_PLAN_ORDER >= b.TEST_PLAN_ORDER) ligne, DATASET_ID
                 from CAMPAIGN_TEST_PLAN_ITEM_TMP a) t2
         where t1.CAMPAIGN_ID = t2.CAMPAIGN_ID and t1.CTPI_ID = t2.CTPI_ID;

        truncate table CAMPAIGN_TEST_PLAN_ITEM;

        insert into CAMPAIGN_TEST_PLAN_ITEM
        select a.CTPI_ID, a.CAMPAIGN_ID, a.TEST_CASE_ID, a.USER_ID,
               a.TEST_PLAN_ORDER + 1 - (select count(*) from CAMPAIGN_TEST_PLAN_ITEM_TMP b
                                where a.CAMPAIGN_ID = b.CAMPAIGN_ID
                                  and a.TEST_PLAN_ORDER = b.TEST_PLAN_ORDER
                                  and a.CTPI_ID <= b.CTPI_ID
                             group by b.CAMPAIGN_ID, b.TEST_PLAN_ORDER) TEST_PLAN_ORDER, a.DATASET_ID
          from CAMPAIGN_TEST_PLAN_ITEM_TMP a;

        drop table CAMPAIGN_TEST_PLAN_ITEM_TMP;
      ]]>
    </sql>
    <addUniqueConstraint tableName="CAMPAIGN_TEST_PLAN_ITEM" columnNames="CAMPAIGN_ID, TEST_PLAN_ORDER"
                         constraintName="uc_campaign_test_plan_item_order"/>
  </changeSet>

  <changeSet id="tm-1.18.0-binding-report-to-dashboard" author="zyang">
    <createTable tableName="CUSTOM_REPORT_REPORT_BINDING">
      <column name="CRRB_ID" type="BIGINT" autoIncrement="true" remarks="pk genere">
        <constraints primaryKey="true" nullable="false" primaryKeyName="PK_CRRB_ID"/>
      </column>

      <column name="CRD_ID" type="BIGINT" remarks="cle etrangere vers le dashboard. ">
        <constraints nullable="false" foreignKeyName="fk_report_bindind_custom_report_dashboard_crd_id"
                     references="CUSTOM_REPORT_DASHBOARD(CRD_ID)"/>
      </column>

      <column name="REPORT_ID" type="BIGINT" remarks="cle etrangere vers le report. ">
        <constraints nullable="false" foreignKeyName="fk_chart_bindind_report_definition_report_id"
                     references="REPORT_DEFINITION(REPORT_ID)"/>
      </column>

      <column name="ROW" type="INT"/>

      <column name="COL" type="INT"/>

      <column name="SIZE_X" type="INT"/>

      <column name="SIZE_Y" type="INT"/>

    </createTable>
  </changeSet>

  <changeSet id="tm-1.18.0-scripted-test-case" author="jthebault">
    <comment>Create the scripted test case table</comment>
    <createTable tableName="SCRIPTED_TC_EXTENDER">
      <column name="SCRIPTED_TC_EXTENDER_ID" type="BIGINT" autoIncrement="true" remarks="autogenerated ID">
        <constraints primaryKey="true" nullable="false"/>
      </column>
      <column name="SCRIPT" type="CLOB" remarks="the test case script"/>
      <column name="LANGUAGE" type="java.sql.Types.VARCHAR(50)" remarks="scriptLanguage of script"/>
      <column name="TEST_CASE_ID" type="BIGINT" remarks="foreign key to TEST_CASE">
        <constraints nullable="false" foreignKeyName="fk_scripted_extender_test_case"
                     references="TEST_CASE(TCLN_ID)"/>
      </column>
    </createTable>

    <createIndex tableName="SCRIPTED_TC_EXTENDER" indexName="scripted_tc_extender_test_case_id_idx">
      <column name="TEST_CASE_ID"/>
    </createIndex>

    <comment>Create the scripted execution table</comment>
    <createTable tableName="SCRIPTED_EXECUTION_EXTENDER">
      <column name="SCRIPTED_EXECUTION_EXTENDER_ID" type="BIGINT" autoIncrement="true" remarks="autogenerated ID">
        <constraints primaryKey="true" nullable="false"/>
      </column>
      <column name="LANGUAGE" type="java.sql.Types.VARCHAR(50)" remarks="scriptLanguage of script"/>
      <column name="SCRIPT_NAME" type="java.sql.Types.VARCHAR(255)"
              remarks="script name,by example feature name for Gherkin"/>
      <column name="EXECUTION_ID" type="BIGINT" remarks="foreign key to EXECUTION">
        <constraints nullable="false" foreignKeyName="fk_scripted_extender_execution"
                     references="EXECUTION(EXECUTION_ID)"/>
      </column>
    </createTable>

    <createIndex tableName="SCRIPTED_EXECUTION_EXTENDER" indexName="scripted_execution_extender_execution_id_idx">
      <column name="EXECUTION_ID" />
    </createIndex>

    <addColumn tableName="TEST_CASE">
      <column name="TC_KIND" type="VARCHAR(30)" defaultValue="STANDARD">
        <constraints nullable="false"/>
      </column>
    </addColumn>

  </changeSet>

  <changeSet id="tm-1.18.0-modification-report" author="zyang">
    <comment>Adds a summary field to report definition</comment>
    <addColumn tableName="REPORT_DEFINITION">
      <column name="SUMMARY" type="VARCHAR(255)" defaultValue="">
        <constraints nullable="false"/>
      </column>
    </addColumn>
  </changeSet>


  <!-- OAuth consumer profile [SQTM-338] -->


  <changeSet id="tm-1.18.0-oauth1a-consumer-1" author="bsiri">
    <comment>
        StoredCredentials can now store either credentials, either general configuration.
        A new column appear so we can hint what is the type of the payload.
        Also, users can now have stored credentials (even though they can't manage them yet).
        Only one credentials can be created for a given user and a given server (bugtracker)
    </comment>

    <addColumn tableName="STORED_CREDENTIALS">
      <column name="CONTENT_TYPE" type="java.sql.Types.VARCHAR(4)" defaultValue="CRED"
              remarks="the role of the content, either CRED or CONF">
      </column>

      <column name="AUTHENTICATED_USER" type="BIGINT" defaultValue="null"
              remarks="Foreign key to the user account that owns the credentials. A NULL value means that Squash-TM
              owns the credentials (app-level credentials).">
        <constraints nullable="true"
                     foreignKeyName="fk_stored_credentials_user" references="CORE_USER(PARTY_ID)"
                     deleteCascade="true"/>
      </column>
    </addColumn>

    <addUniqueConstraint tableName="STORED_CREDENTIALS"
                         columnNames="AUTHENTICATED_SERVER,AUTHENTICATED_USER,CONTENT_TYPE"
                         constraintName="uniq_stored_credentials_server_user"/>

  </changeSet>

  <changeSet id="tm-1.18.0-oauth1a-consumer-2" author="bsiri">
    <comment>
      Bugtracker now declare which authentication protocol should be used upfront.
    </comment>

    <addColumn tableName="BUGTRACKER">
      <column name="AUTH_PROTOCOL" type="java.sql.Types.VARCHAR(30)" defaultValue="BASIC_AUTH">
        <constraints nullable="false"/>
      </column>
    </addColumn>

  </changeSet>

  <changeSet id="tm-1.18.0-email-column-resizing" author="aguilhem">
    <modifyDataType tableName="CORE_USER" columnName="EMAIL" newDataType="VARCHAR(255)"/>
  </changeSet>

</databaseChangeLog>
