<?xml version="1.0" encoding="UTF-8"?>
<!--

        This file is part of the Squashtest platform.
        Copyright (C) Henix, henix.fr

        See the NOTICE file distributed with this work for additional
        information regarding copyright ownership.

        This is free software: you can redistribute it and/or modify
        it under the terms of the GNU Lesser General Public License as published by
        the Free Software Foundation, either version 3 of the License, or
        (at your option) any later version.

        this software is distributed in the hope that it will be useful,
        but WITHOUT ANY WARRANTY; without even the implied warranty of
        MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
        GNU Lesser General Public License for more details.

        You should have received a copy of the GNU Lesser General Public License
        along with this software.  If not, see <http://www.gnu.org/licenses/>.

-->
<databaseChangeLog xmlns="http://www.liquibase.org/xml/ns/dbchangelog"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://www.liquibase.org/xml/ns/dbchangelog http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-2.0.xsd">
  
  <changeSet id="tm-1.8.2" author="flaurens">
    <comment>Update TM database version number</comment>
    <update tableName="CORE_CONFIG">
      <column name="VALUE" value="1.8.2" />
      <where>STR_KEY = 'squashtest.tm.database.version'</where>
    </update>
  </changeSet>
  
  <changeSet id="tm-1.8.2.feature-3120-01" author="flaurens">
    <comment>Adding denormalized field option table for editable denormalized list valued cufs</comment>
    <createTable tableName="DENORMALIZED_FIELD_OPTION">
      <column name="DFV_ID" type="BIGINT">
        <constraints nullable="false" references="DENORMALIZED_FIELD_VALUE(DFV_ID)" foreignKeyName="fk_df_option_dfv"/>
      </column>
      <column name="LABEL" type="VARCHAR(255)">
        <constraints nullable="false" />
      </column>
      <column name="POSITION" type="INT">
        <constraints nullable="false" />
      </column>
      <column name="CODE" type="VARCHAR(30)">
        <constraints nullable="false" />
      </column>
    </createTable>
  </changeSet>

  
  <changeSet id="tm-1.8.2.feature-3120-02" author="flaurens">
    <comment>Old list valued cufs are editable as simple text cufs</comment>
    <update tableName="DENORMALIZED_FIELD_VALUE">
        <column name="INPUT_TYPE" value="PLAIN_TEXT" />
            <where>INPUT_TYPE = 'DROPDOWN_LIST'</where>
    </update>
  </changeSet>
  
  <changeSet id="tm-1.8.2.feature-3120-03" author="flaurens">
    <comment>Adding a field type column to denormalized field value table</comment>
    <addColumn tableName="DENORMALIZED_FIELD_VALUE">
            <column name="FIELD_TYPE" type="CHAR(3)" defaultValue="CF" remarks="CF : simple, SSF : multiple-choice">
                   <constraints nullable="false" />
            </column>
    </addColumn>
  </changeSet>
  
  

  <changeSet id="tm-1.8.2-feat-3127-01" author="bsiri">
    <comment>As of now X_LIBRARY_PLUGINS are merged in the single table LIBRARY_PLUGIN_BINDING</comment>
    
    <createTable tableName="LIBRARY_PLUGIN_BINDING">
      <column name="PLUGIN_BINDING_ID" type="BIGINT" autoIncrement="true" remarks="primary key (autogenerated)" >
        <constraints nullable="false" primaryKey="true"/>
      </column>         
      
      <column name="LIBRARY_ID" type="BIGINT" 
          remarks="ID of the library. It is explicitely nullable because hibernate will first create the row then update this column.">
        <constraints nullable="true"/>
      </column>
      
      <column name="LIBRARY_TYPE" type="CHAR(1)" remarks="discriminator of the library. T: test case library, R : requirement library, C : campaign library">
            <constraints nullable="false" />
        </column>
        
        <column name="PLUGIN_ID" type="VARCHAR(50)" 
            remarks="id of the plugin. Note that those plugins aren't stored in the database and the plugin registry is purely software 
              (it is basically based on the presence/absence of an OSGI services published by each plugin) so we cannot really enforce referential
              integrity. Still, although technically that column cannot be a foreign key, the application uses it as if.">
        <constraints nullable="false"/>
      </column>
      
    </createTable>
    
    <addUniqueConstraint tableName="LIBRARY_PLUGIN_BINDING" columnNames="LIBRARY_ID, LIBRARY_TYPE, PLUGIN_ID" 
          constraintName="uniq_plugin_binding" />
    
  </changeSet>
  
  <changeSet id="tm-1.8.2-feat-3127-02" author="bsiri">
    <comment>create the table LIBRARY_PLUGIN_PROPERTY</comment>
    
    <createTable tableName="LIBRARY_PLUGIN_BINDING_PROPERTY">
      
      <column name="PLUGIN_BINDING_ID" type="BIGINT" remarks="foreign key to LIBRARY_PLUGIN_BINDING">
        <constraints nullable="false" foreignKeyName="fk_libplugin_property_libplugin" references="LIBRARY_PLUGIN_BINDING(PLUGIN_BINDING_ID)"/>
      </column>
      
      <column name="PLUGIN_BINDING_KEY" type="java.sql.Types.VARCHAR(30)" remarks="key of this property">
        <constraints nullable="false"/>
      </column>
    
      <column name="PLUGIN_BINDING_VALUE" type="java.sql.Types.VARCHAR(255)" remarks="value of this property">
        <constraints nullable="false"/>
      </column>
        
    </createTable>
  
  </changeSet>    
  
  <changeSet id="tm-1.8.2-feat-3127-03" author="bsiri">
    <comment>drop the old tables</comment>
    
    <dropTable tableName="TEST_CASE_LIBRARY_PLUGINS"/>
    <dropTable tableName="REQUIREMENT_LIBRARY_PLUGINS"/>
    <dropTable tableName="CAMPAIGN_LIBRARY_PLUGINS"/>
  </changeSet>
  
</databaseChangeLog>