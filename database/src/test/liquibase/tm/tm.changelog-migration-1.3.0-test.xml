<?xml version="1.0" encoding="UTF-8"?>
<!--

        This file is part of the Squashtest platform.
        Copyright (C) Henix, henix.fr

        See the NOTICE file distributed with this work for additional
        information regarding copyright ownership.

        This is free software: you can redistribute it and/or modify
        it under the terms of the GNU Lesser General Public License as published by
        the Free Software Foundation, either version 3 of the License, or
        (at your option) any later version.

        this software is distributed in the hope that it will be useful,
        but WITHOUT ANY WARRANTY; without even the implied warranty of
        MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
        GNU Lesser General Public License for more details.

        You should have received a copy of the GNU Lesser General Public License
        along with this software.  If not, see <http://www.gnu.org/licenses/>.

-->
<databaseChangeLog xmlns="http://www.liquibase.org/xml/ns/dbchangelog"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.liquibase.org/xml/ns/dbchangelog 
     http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-2.0.xsd">
     
<include file="tm.data-1.2.0.xml" relativeToChangelogFile="true" />

	<changeSet id="1.3.0.feat1194-test-issue-bt-fk-01" author="mpagnon">
		<comment>We save data from ISSUE before it is migrated</comment>
		<sql>
			CREATE TEMPORARY TABLE OLD_ISSUE_BT (
			ISSUE_ID BIGINT NULL DEFAULT NULL,
			BT_NAME VARCHAR(250) NULL DEFAULT NULL
			)		
		</sql>
		<sql>
			insert into OLD_ISSUE_BT (ISSUE_ID, BT_NAME)
			select ISSUE_ID, BT_NAME from ISSUE
		</sql>
	</changeSet>
	
	<!-- ========================================================================================================================== -->
	<!-- ___________________________________________________________INCLUDE CHANGELOG_______________________________________ -->
	<include file="../../../main/liquibase/tm/tm.changelog-1.3.0.xml"
		relativeToChangelogFile="true" />
	<!-- =========================================================================================================================== -->


	<changeSet id="1.3.0.feat1194-test-issue-bt-fk-02" author="mpagnon" >
		<preConditions>
			<sqlCheck expectedResult="0">
		select count(*) from OLD_ISSUE_BT o
		where not exists (
		select 1 from ISSUE i, BUGTRACKER bt
		where o.ISSUE_ID = i.ISSUE_ID
		and i.BUGTRACKER_ID = bt.BUGTRACKER_ID
		and o.BT_NAME = bt.NAME);
	</sqlCheck>
	</preConditions>
		<comment>We check that ISSUE now has a FK on BUGTRACKER</comment>
	</changeSet>
	
	<changeSet id="1.3.0.feat1194-test-migtated-bt-01" author="mpagnon" >
		<preConditions>
			<sqlCheck expectedResult="0">
		select count(*) from BUGTRACKER bta , BUGTRACKER btb
		where bta.NAME = btb.NAME
		and bta.BUGTRACKER_ID != btb.BUGTRACKER_ID;
	</sqlCheck>
	</preConditions>
		<comment>We check that all migrated bug-tracker names are different</comment>
	</changeSet>
	<!-- ================		TEST FEAT. 1112 ================== -->

	<changeSet id="1.3.0.create-feat1112-test-tmp-table" author="bsiri">
		<createTable tableName="FEAT_TMP_TABLE">
			<column name="ancestor_id" type="BIGINT" />
			<column name="descendant_id" type="BIGINT" />
			<column name="depth" type="SMALLINT" />
		</createTable>

	</changeSet>


	<!-- Testing TCLN migration. Here we compare FEAT_TMP_TABLE and a subset 
		of TCLN_CLOSURE_TABLE restricted to some ids. Their content must be equal, 
		we test this by testing that each contain all the lines of the other one. -->

	<changeSet id="1.3.0.check-tcln-closure-setup" author="bsiri">
		<!-- the following test data are based on a subset of TCLN ids declared 
			in 'tm.data-0.15.0.sql' -->
		<sql>
			delete from FEAT_TMP_TABLE;

			insert into FEAT_TMP_TABLE values
			(130, 130, 0),
			(131, 131, 0),
			(132, 132, 0),
			(133, 133, 0),
			(134, 134, 0),
			(135, 135, 0),
			(136, 136, 0),
			(137, 137, 0),
			(138, 138, 0),
			(130, 131, 1),
			(130, 133, 1),
			(130, 132, 2),
			(130, 134, 2),
			(130, 135, 2),
			(130, 136, 2),
			(130, 137, 2),
			(130, 138, 2),
			(131, 132, 1),
			(133, 134, 1),
			(133, 135, 1),
			(133, 136, 1),
			(133, 137, 1),
			(133, 138, 1) 
		</sql>
		<comment>
			130 contains 131 and 133; 
			131 contains 132;
			133 contains 134, 135, 136, 317, 138.
			The following test will ensure that the hierarchy was fully expanded in the closure table.
		</comment>
	</changeSet>


	<changeSet id="1.3.0.check-tcln-closure-test" author="bsiri">

		<preConditions>
			<!-- check that there are no ancestor in the closure table that have a 
				descendant not listed in the tmp table -->
			<sqlCheck expectedResult="0">
				select count(clos1.ancestor_id)
				from TCLN_RELATIONSHIP_CLOSURE clos1
				where
				clos1.ancestor_id in (130, 131, 132, 133, 134, 135, 136, 137, 138)
				and
				clos1.descendant_id not in (
				select tmp.descendant_id from FEAT_TMP_TABLE tmp
				where tmp.ancestor_id = clos1.ancestor_id
				and tmp.depth = clos1.depth
				)
			</sqlCheck>

			<!-- complementary check : that there are no ancestor in the tmp table 
				that have a descendant not listed in the closure table. -->
			<sqlCheck expectedResult="0">
				select count(tmp.ancestor_id) from
				FEAT_TMP_TABLE tmp
				where
				tmp.ancestor_id in (130, 131, 132, 133, 134, 135, 136, 137, 138)
				and
				tmp.descendant_id not in (
				select clos1.descendant_id from TCLN_RELATIONSHIP_CLOSURE clos1
				where tmp.ancestor_id = clos1.ancestor_id
				and tmp.depth = clos1.depth
				)
			</sqlCheck>

		</preConditions>

	</changeSet>



	<!-- Testing CLN migration. Here we compare FEAT_TMP_TABLE and a subset 
		of CLN_CLOSURE_TABLE restricted to some ids. Their content must be equal, 
		we test this by testing that each contain all the lines of the other one. -->

	<changeSet id="1.3.0.check-cln-closure-setup" author="bsiri">
		<!-- the following test data are based on a subset of CLN ids declared 
			in 'tm.data-0.15.0.sql' -->
		<sql>
			delete from FEAT_TMP_TABLE;

			insert into FEAT_TMP_TABLE values
			(10, 10, 0),
			(11, 11, 0),
			(12, 12, 0),
			(13, 13, 0),
			(10, 11, 1),
			(10, 12, 2),
			(10, 13, 3),
			(11, 12, 1),
			(11, 13, 2),
			(12, 13, 1)				
		</sql>
		<comment>
			10 contains 11
			11 contains 12
			12 contains 13		
		</comment>
	</changeSet>


	<changeSet id="1.3.0.check-cln-closure-test" author="bsiri">

		<preConditions>
			<!-- check that there are no ancestor in the closure table that have a 
				descendant not listed in the tmp table -->
			<sqlCheck expectedResult="0">
				select count(clos1.ancestor_id)
				from CLN_RELATIONSHIP_CLOSURE clos1
				where
				clos1.ancestor_id in (10, 11, 12, 13)
				and
				clos1.descendant_id not in (
				select tmp.descendant_id from FEAT_TMP_TABLE tmp
				where tmp.ancestor_id = clos1.ancestor_id
				and tmp.depth = clos1.depth
				)
			</sqlCheck>

			<!-- complementary check : that there are no ancestor in the tmp table 
				that have a descendant not listed in the closure table. -->
			<sqlCheck expectedResult="0">
				select count(tmp.ancestor_id) from
				FEAT_TMP_TABLE tmp
				where
				tmp.ancestor_id in (10, 11, 12, 13)
				and
				tmp.descendant_id not in (
				select clos1.descendant_id from CLN_RELATIONSHIP_CLOSURE clos1
				where tmp.ancestor_id = clos1.ancestor_id
				and tmp.depth = clos1.depth
				)
			</sqlCheck>

		</preConditions>
	</changeSet>


	<changeSet id="1.3.0.delete-feat1112-test-tmp-table" author="bsiri">
		<dropTable tableName="FEAT_TMP_TABLE" />
	</changeSet>


	<!-- ================/TEST FEAT. 1112=============================== -->

</databaseChangeLog>